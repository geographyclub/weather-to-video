#!/bin/bash

##### download #####
#dir=$PWD/../data/gdps/utc$(date -u +"%Y%m%d")
#mydate=$(date -u +"%Y%m%d")
modelhour=00
dir=/home/steve/data/gdps
mydate=$(date +"%Y%m%d")
rm -f ${dir}/*
for a in $(seq -f "%03g" 3 3 240); do
  wget -P ${dir} https://dd.weather.gc.ca/model_gem_global/15km/grib2/lat_lon/${modelhour}/${a}/CMC_glb_TMP_TGL_2_latlon.15x.15_${mydate}${modelhour}_P${a}.grib2;
  wget -P ${dir} https://dd.weather.gc.ca/model_gem_global/15km/grib2/lat_lon/${modelhour}/${a}/CMC_glb_PRATE_SFC_0_latlon.15x.15_${mydate}${modelhour}_P${a}.grib2
  wget -P ${dir} https://dd.weather.gc.ca/model_gem_global/15km/grib2/lat_lon/${modelhour}/${a}/CMC_glb_TCDC_SFC_0_latlon.15x.15_${mydate}${modelhour}_P${a}.grib2
#  wget -P ${dir} https://dd.weather.gc.ca/model_gem_global/15km/grib2/lat_lon/${modelhour}/${a}/CMC_glb_PRMSL_MSL_0_latlon.15x.15_${mydate}${modelhour}_P${a}.grib2
done

##### extract #####
#psql -d world -c "COPY (SELECT * FROM ne_10m_populated_places) TO STDOUT;" > /home/steve/data/places.csv
echo "extracting gribs..."
for a in TMP PRATE TCDC; do
  ls ${dir}/*${a}*.grib2 | while read file; do
    hour=`echo ${file} | sed 's/^.*_P//g' | sed 's/.grib2//g'`
    /home/steve/data/grib2/wgrib2/wgrib2 ${file} `cat /home/steve/data/places.csv | sed -n '1,2000p' | awk -F '\t' '{print "-lon",$22,$21}' | tr '\n' ' '` | tr ':' '\n' | grep 'val=' | sed -e 's/^.*val=//g' > ${dir}/${a}${hour}.txt
    /home/steve/data/grib2/wgrib2/wgrib2 ${file} `cat /home/steve/data/places.csv | sed -n '2001,4000p' | awk -F '\t' '{print "-lon",$22,$21}' | tr '\n' ' '` | tr ':' '\n' | grep 'val=' | sed -e 's/^.*val=//g' >> ${dir}/${a}${hour}.txt
    /home/steve/data/grib2/wgrib2/wgrib2 ${file} `cat /home/steve/data/places.csv | sed -n '4001,7343p' | awk -F '\t' '{print "-lon",$22,$21}' | tr '\n' ' '` | tr ':' '\n' | grep 'val=' | sed -e 's/^.*val=//g' >> ${dir}/${a}${hour}.txt
  done
done
awk -F '\t' '{print $1}' /home/steve/data/places.csv | paste - $(ls -v ${dir}/TMP*.txt | tr '\n' ' ') $(ls -v ${dir}/PRATE*.txt | tr '\n' ' ') $(ls -v ${dir}/TCDC*.txt | tr '\n' ' ') > ${dir}/gdps_places.csv

##### psql #####
mytable=gdps
psql -d world -c "DROP TABLE IF EXISTS ${mytable};"
psql -d world -c "CREATE TABLE ${mytable}(fid int, t003 numeric, t006 numeric, t009 numeric, t012 numeric, t015 numeric, t018 numeric, t021 numeric, t024 numeric, t027 numeric, t030 numeric, t033 numeric, t036 numeric, t039 numeric, t042 numeric, t045 numeric, t048 numeric, t051 numeric, t054 numeric, t057 numeric, t060 numeric, t063 numeric, t066 numeric, t069 numeric, t072 numeric, t075 numeric, t078 numeric, t081 numeric, t084 numeric, t087 numeric, t090 numeric, t093 numeric, t096 numeric, t099 numeric, t102 numeric, t105 numeric, t108 numeric, t111 numeric, t114 numeric, t117 numeric, t120 numeric, t123 numeric, t126 numeric, t129 numeric, t132 numeric, t135 numeric, t138 numeric, t141 numeric, t144 numeric, t147 numeric, t150 numeric, t153 numeric, t156 numeric, t159 numeric, t162 numeric, t165 numeric, t168 numeric, t171 numeric, t174 numeric, t177 numeric, t180 numeric, t183 numeric, t186 numeric, t189 numeric, t192 numeric, t195 numeric, t198 numeric, t201 numeric, t204 numeric, t207 numeric, t210 numeric, t213 numeric, t216 numeric, t219 numeric, t222 numeric, t225 numeric, t228 numeric, t231 numeric, t234 numeric, t237 numeric, t240 numeric, p003 numeric, p006 numeric, p009 numeric, p012 numeric, p015 numeric, p018 numeric, p021 numeric, p024 numeric, p027 numeric, p030 numeric, p033 numeric, p036 numeric, p039 numeric, p042 numeric, p045 numeric, p048 numeric, p051 numeric, p054 numeric, p057 numeric, p060 numeric, p063 numeric, p066 numeric, p069 numeric, p072 numeric, p075 numeric, p078 numeric, p081 numeric, p084 numeric, p087 numeric, p090 numeric, p093 numeric, p096 numeric, p099 numeric, p102 numeric, p105 numeric, p108 numeric, p111 numeric, p114 numeric, p117 numeric, p120 numeric, p123 numeric, p126 numeric, p129 numeric, p132 numeric, p135 numeric, p138 numeric, p141 numeric, p144 numeric, p147 numeric, p150 numeric, p153 numeric, p156 numeric, p159 numeric, p162 numeric, p165 numeric, p168 numeric, p171 numeric, p174 numeric, p177 numeric, p180 numeric, p183 numeric, p186 numeric, p189 numeric, p192 numeric, p195 numeric, p198 numeric, p201 numeric, p204 numeric, p207 numeric, p210 numeric, p213 numeric, p216 numeric, p219 numeric, p222 numeric, p225 numeric, p228 numeric, p231 numeric, p234 numeric, p237 numeric, p240 numeric, c003 numeric, c006 numeric, c009 numeric, c012 numeric, c015 numeric, c018 numeric, c021 numeric, c024 numeric, c027 numeric, c030 numeric, c033 numeric, c036 numeric, c039 numeric, c042 numeric, c045 numeric, c048 numeric, c051 numeric, c054 numeric, c057 numeric, c060 numeric, c063 numeric, c066 numeric, c069 numeric, c072 numeric, c075 numeric, c078 numeric, c081 numeric, c084 numeric, c087 numeric, c090 numeric, c093 numeric, c096 numeric, c099 numeric, c102 numeric, c105 numeric, c108 numeric, c111 numeric, c114 numeric, c117 numeric, c120 numeric, c123 numeric, c126 numeric, c129 numeric, c132 numeric, c135 numeric, c138 numeric, c141 numeric, c144 numeric, c147 numeric, c150 numeric, c153 numeric, c156 numeric, c159 numeric, c162 numeric, c165 numeric, c168 numeric, c171 numeric, c174 numeric, c177 numeric, c180 numeric, c183 numeric, c186 numeric, c189 numeric, c192 numeric, c195 numeric, c198 numeric, c201 numeric, c204 numeric, c207 numeric, c210 numeric, c213 numeric, c216 numeric, c219 numeric, c222 numeric, c225 numeric, c228 numeric, c231 numeric, c234 numeric, c237 numeric, c240 numeric);"
psql -d world -c "COPY ${mytable} FROM '${dir}/gdps_places.csv' DELIMITER E'\t' CSV;"
psql -d world -c "ALTER TABLE ${mytable} ADD COLUMN id serial primary key;"
psql -d world -c "UPDATE ${mytable} SET t003 = round((t003-273.15)); UPDATE ${mytable} SET t006 = round((t006-273.15)); UPDATE ${mytable} SET t009 = round((t009-273.15)); UPDATE ${mytable} SET t012 = round((t012-273.15)); UPDATE ${mytable} SET t015 = round((t015-273.15)); UPDATE ${mytable} SET t018 = round((t018-273.15)); UPDATE ${mytable} SET t021 = round((t021-273.15)); UPDATE ${mytable} SET t024 = round((t024-273.15)); UPDATE ${mytable} SET t027 = round((t027-273.15)); UPDATE ${mytable} SET t030 = round((t030-273.15)); UPDATE ${mytable} SET t033 = round((t033-273.15)); UPDATE ${mytable} SET t036 = round((t036-273.15)); UPDATE ${mytable} SET t039 = round((t039-273.15)); UPDATE ${mytable} SET t042 = round((t042-273.15)); UPDATE ${mytable} SET t045 = round((t045-273.15)); UPDATE ${mytable} SET t048 = round((t048-273.15)); UPDATE ${mytable} SET t051 = round((t051-273.15)); UPDATE ${mytable} SET t054 = round((t054-273.15)); UPDATE ${mytable} SET t057 = round((t057-273.15)); UPDATE ${mytable} SET t060 = round((t060-273.15)); UPDATE ${mytable} SET t063 = round((t063-273.15)); UPDATE ${mytable} SET t066 = round((t066-273.15)); UPDATE ${mytable} SET t069 = round((t069-273.15)); UPDATE ${mytable} SET t072 = round((t072-273.15)); UPDATE ${mytable} SET t075 = round((t075-273.15)); UPDATE ${mytable} SET t078 = round((t078-273.15)); UPDATE ${mytable} SET t081 = round((t081-273.15)); UPDATE ${mytable} SET t084 = round((t084-273.15)); UPDATE ${mytable} SET t087 = round((t087-273.15)); UPDATE ${mytable} SET t090 = round((t090-273.15)); UPDATE ${mytable} SET t093 = round((t093-273.15)); UPDATE ${mytable} SET t096 = round((t096-273.15)); UPDATE ${mytable} SET t099 = round((t099-273.15)); UPDATE ${mytable} SET t102 = round((t102-273.15)); UPDATE ${mytable} SET t105 = round((t105-273.15)); UPDATE ${mytable} SET t108 = round((t108-273.15)); UPDATE ${mytable} SET t111 = round((t111-273.15)); UPDATE ${mytable} SET t114 = round((t114-273.15)); UPDATE ${mytable} SET t117 = round((t117-273.15)); UPDATE ${mytable} SET t120 = round((t120-273.15)); UPDATE ${mytable} SET t123 = round((t123-273.15)); UPDATE ${mytable} SET t126 = round((t126-273.15)); UPDATE ${mytable} SET t129 = round((t129-273.15)); UPDATE ${mytable} SET t132 = round((t132-273.15)); UPDATE ${mytable} SET t135 = round((t135-273.15)); UPDATE ${mytable} SET t138 = round((t138-273.15)); UPDATE ${mytable} SET t141 = round((t141-273.15)); UPDATE ${mytable} SET t144 = round((t144-273.15)); UPDATE ${mytable} SET t147 = round((t147-273.15)); UPDATE ${mytable} SET t150 = round((t150-273.15)); UPDATE ${mytable} SET t153 = round((t153-273.15)); UPDATE ${mytable} SET t156 = round((t156-273.15)); UPDATE ${mytable} SET t159 = round((t159-273.15)); UPDATE ${mytable} SET t162 = round((t162-273.15)); UPDATE ${mytable} SET t165 = round((t165-273.15)); UPDATE ${mytable} SET t168 = round((t168-273.15)); UPDATE ${mytable} SET t171 = round((t171-273.15)); UPDATE ${mytable} SET t174 = round((t174-273.15)); UPDATE ${mytable} SET t177 = round((t177-273.15)); UPDATE ${mytable} SET t180 = round((t180-273.15)); UPDATE ${mytable} SET t183 = round((t183-273.15)); UPDATE ${mytable} SET t186 = round((t186-273.15)); UPDATE ${mytable} SET t189 = round((t189-273.15)); UPDATE ${mytable} SET t192 = round((t192-273.15)); UPDATE ${mytable} SET t195 = round((t195-273.15)); UPDATE ${mytable} SET t198 = round((t198-273.15)); UPDATE ${mytable} SET t201 = round((t201-273.15)); UPDATE ${mytable} SET t204 = round((t204-273.15)); UPDATE ${mytable} SET t207 = round((t207-273.15)); UPDATE ${mytable} SET t210 = round((t210-273.15)); UPDATE ${mytable} SET t213 = round((t213-273.15)); UPDATE ${mytable} SET t216 = round((t216-273.15)); UPDATE ${mytable} SET t219 = round((t219-273.15)); UPDATE ${mytable} SET t222 = round((t222-273.15)); UPDATE ${mytable} SET t225 = round((t225-273.15)); UPDATE ${mytable} SET t228 = round((t228-273.15)); UPDATE ${mytable} SET t231 = round((t231-273.15)); UPDATE ${mytable} SET t234 = round((t234-273.15)); UPDATE ${mytable} SET t237 = round((t237-273.15)); UPDATE ${mytable} SET t240 = round((t240-273.15));"

##### select weather
place=Seoul
psql -d world -c "COPY (SELECT a.name, a.timezone, b.* FROM ne_10m_populated_places a, gdps b WHERE a.fid = b.fid AND a.name = '${place}') TO STDOUT;"

# date -u +"%Y%m%d_%H" --date='TZ="Asia/Seoul" 12am 20220712'
date -u +"%Y%m%d_%H" --date='TZ="Asia/Seoul" 12am 1 day'

##### daily gdps #####
rm -f $PWD/../data/places_utc.sql
psql -d world -c "\COPY (SELECT DISTINCT(utc), day1, day2, day3 FROM places_utc) TO STDOUT (DELIMITER E'\t');" | while IFS=$'\t' read -a array; do echo '\COPY (SELECT a.ogc_fid, LEAST('$(echo ${array[1]} | sed -e 's/000 //g' -e 's/ /,/g' -e 's/\([0-9][0-9][0-9]\)/a.t\1/g' -e 's/$/)/g')', GREATEST('$(echo ${array[1]} | sed -e 's/000 //g' -e 's/ /,/g' -e 's/\([0-9][0-9][0-9]\)/a.t\1/g' -e 's/$/)/g')', LEAST('$(echo ${array[2]} | sed -e 's/000 //g' -e 's/ /,/g' -e 's/\([0-9][0-9][0-9]\)/a.t\1/g' -e 's/$/)/g')', GREATEST('$(echo ${array[2]} | sed -e 's/000 //g' -e 's/ /,/g' -e 's/\([0-9][0-9][0-9]\)/a.t\1/g' -e 's/$/)/g')', LEAST('$(echo ${array[3]} | sed -e 's/000 //g' -e 's/ /,/g' -e 's/\([0-9][0-9][0-9]\)/a.t\1/g' -e 's/$/)/g')', GREATEST('$(echo ${array[3]} | sed -e 's/000 //g' -e 's/ /,/g' -e 's/\([0-9][0-9][0-9]\)/a.t\1/g' -e 's/$/)/g')', LEAST('$(echo ${array[1]} | sed -e 's/000 //g' -e 's/ /,/g' -e 's/\([0-9][0-9][0-9]\)/a.p\1/g' -e 's/$/)/g')', GREATEST('$(echo ${array[1]} | sed -e 's/000 //g' -e 's/ /,/g' -e 's/\([0-9][0-9][0-9]\)/a.p\1/g' -e 's/$/)/g')', LEAST('$(echo ${array[2]} | sed -e 's/000 //g' -e 's/ /,/g' -e 's/\([0-9][0-9][0-9]\)/a.p\1/g' -e 's/$/)/g')', GREATEST('$(echo ${array[2]} | sed -e 's/000 //g' -e 's/ /,/g' -e 's/\([0-9][0-9][0-9]\)/a.p\1/g' -e 's/$/)/g')', LEAST('$(echo ${array[3]} | sed -e 's/000 //g' -e 's/ /,/g' -e 's/\([0-9][0-9][0-9]\)/a.p\1/g' -e 's/$/)/g')', GREATEST('$(echo ${array[3]} | sed -e 's/000 //g' -e 's/ /,/g' -e 's/\([0-9][0-9][0-9]\)/a.p\1/g' -e 's/$/)/g')', LEAST('$(echo ${array[1]} | sed -e 's/000 //g' -e 's/ /,/g' -e 's/\([0-9][0-9][0-9]\)/a.c\1/g' -e 's/$/)/g')', GREATEST('$(echo ${array[1]} | sed -e 's/000 //g' -e 's/ /,/g' -e 's/\([0-9][0-9][0-9]\)/a.c\1/g' -e 's/$/)/g')', LEAST('$(echo ${array[2]} | sed -e 's/000 //g' -e 's/ /,/g' -e 's/\([0-9][0-9][0-9]\)/a.c\1/g' -e 's/$/)/g')', GREATEST('$(echo ${array[2]} | sed -e 's/000 //g' -e 's/ /,/g' -e 's/\([0-9][0-9][0-9]\)/a.c\1/g' -e 's/$/)/g')', LEAST('$(echo ${array[3]} | sed -e 's/000 //g' -e 's/ /,/g' -e 's/\([0-9][0-9][0-9]\)/a.c\1/g' -e 's/$/)/g')', GREATEST('$(echo ${array[3]} | sed -e 's/000 //g' -e 's/ /,/g' -e 's/\([0-9][0-9][0-9]\)/a.c\1/g' -e 's/$/)/g')' FROM gdps a, places_utc b WHERE a.ogc_fid = b.ogc_fid AND b.utc = '\'$(echo ${array[0]})\'') TO STDOUT;' >> $PWD/../data/places_utc.sql; done
psql -d world -f $PWD/../data/places_utc.sql > $PWD/../data/places_gdps_utc.csv
psql -d world -c "DROP TABLE IF EXISTS places_gdps_utc;"
psql -d world -c "CREATE TABLE places_gdps_utc(ogc_fid int, day1_tmin numeric, day1_tmax numeric, day2_tmin numeric, day2_tmax numeric, day3_tmin numeric, day3_tmax numeric, day1_pmin numeric, day1_pmax numeric, day2_pmin numeric, day2_pmax numeric, day3_pmin numeric, day3_pmax numeric, day1_cmin numeric, day1_cmax numeric, day2_cmin numeric, day2_cmax numeric, day3_cmin numeric, day3_cmax numeric);"
psql -d world -c "COPY places_gdps_utc FROM '$PWD/../data/places_gdps_utc.csv' CSV DELIMITER E'\t';"

##### conditions #####
psql -d world -c "ALTER TABLE places_gdps_utc ADD COLUMN IF NOT EXISTS day1_wx text, ADD COLUMN IF NOT EXISTS day2_wx text, ADD COLUMN IF NOT EXISTS day3_wx text;"
psql -d world -c "UPDATE places_gdps_utc SET day1_wx = CASE WHEN day1_pmax > 0 AND day1_tmin > 0 THEN 'RAIN' WHEN day1_pmax > 0 AND day1_tmin <= 0 THEN 'SNOW' WHEN day1_pmax <= 0 AND day1_cmax <= 10 THEN 'CLEAR' WHEN day1_pmax <= 0 AND day1_cmax > 10 AND day1_cmax < 50 THEN 'PARTLY CLOUDY' WHEN day1_pmax <= 0 AND day1_cmax >= 50 THEN 'CLOUDY' ELSE '' END;"
psql -d world -c "UPDATE places_gdps_utc SET day2_wx = CASE WHEN day2_pmax > 0 AND day2_tmin > 0 THEN 'RAIN' WHEN day2_pmax > 0 AND day2_tmin <= 0 THEN 'SNOW' WHEN day2_pmax <= 0 AND day2_cmax <= 10 THEN 'CLEAR' WHEN day2_pmax <= 0 AND day2_cmax > 10 AND day2_cmax < 50 THEN 'PARTLY CLOUDY' WHEN day2_pmax <= 0 AND day2_cmax >= 50 THEN 'CLOUDY' ELSE '' END;"
psql -d world -c "UPDATE places_gdps_utc SET day3_wx = CASE WHEN day3_pmax > 0 AND day3_tmin > 0 THEN 'RAIN' WHEN day3_pmax > 0 AND day3_tmin <= 0 THEN 'SNOW' WHEN day3_pmax <= 0 AND day3_cmax <= 10 THEN 'CLEAR' WHEN day3_pmax <= 0 AND day3_cmax > 10 AND day3_cmax < 50 THEN 'PARTLY CLOUDY' WHEN day3_pmax <= 0 AND day3_cmax >= 50 THEN 'CLOUDY' ELSE '' END;"

##### contours #####
#mytime=$(echo "$(date +%H) - ($(date +%H)%3)" | bc | awk '{ printf("%03d", $1) }')
#saga_cmd shapes_grid 5 -GRID $PWD/../data/gdps/CMC_glb_PRMSL_MSL_0_latlon.24x.24_2020100300_P${mytime}.grib2 -CONTOUR $PWD/../data/gdps/contour_pressure -SCALE 3 -ZSTEP 100
#saga_cmd shapes_grid 9 -GRID ${file}_pressure.nc -MINIMA ${file}_pressure_minima -MAXIMA ${file}_pressure_maxima

##### utc -> local #####
#ogr2ogr -f 'CSV' -lco 'SEPARATOR=TAB' ../data/places.csv ~/maps/naturalearth/natural_earth_vector.gpkg ne_10m_populated_places
#rm -f $PWD/../data/places_utc*
#awk -F '\t' '{print $176}' $PWD/../data/places.csv | sed -e 's/UTC//g' -e 's/:.*$//g' -e 's/±//g' -e 's/+//g' | while read a; do seq -f '%03g' -s ' ' $(echo "${a} - (${a}%3)" | bc) 3 $(echo "${a} - (${a}%3) + 21" | bc) | sed -e 's/-[0-9]\+ //g' -e 's/^/"/g' -e 's/$/"/g' >> $PWD/../data/places_utc_day1.txt; done
#awk -F '\t' '{print $176}' $PWD/../data/places.csv | sed -e 's/UTC//g' -e 's/:.*$//g' -e 's/±//g' -e 's/+//g' | while read a; do seq -f '%03g' -s ' ' $(echo "${a} - (${a}%3) + 24" | bc) 3 $(echo "${a} - (${a}%3) + 45" | bc) | sed -e 's/-[0-9]\+ //g' -e 's/^/"/g' -e 's/$/"/g' >> $PWD/../data/places_utc_day2.txt; done
#awk -F '\t' '{print $176}' $PWD/../data/places.csv | sed -e 's/UTC//g' -e 's/:.*$//g' -e 's/±//g' -e 's/+//g' | while read a; do seq -f '%03g' -s ' ' $(echo "${a} - (${a}%3) + 48" | bc) 3 $(echo "${a} - (${a}%3) + 69" | bc) | sed -e 's/-[0-9]\+ //g' -e 's/^/"/g' -e 's/$/"/g' >> $PWD/../data/places_utc_day3.txt; done
#awk -F '\t' 'BEGIN {OFS=","} {print $1 ',' $176}' $PWD/../data/places.csv | paste -d ',' - $PWD/../data/places_utc_day1.txt $PWD/../data/places_utc_day2.txt $PWD/../data/places_utc_day3.txt > $PWD/../data/places_utc.csv
#psql -d world -c "DROP TABLE IF EXISTS places_utc;"
#psql -d world -c "CREATE TABLE places_utc(ogc_fid int, utc text, day1 text, day2 text, day3 text);"
#psql -d world -c "COPY places_utc FROM '$PWD/../data/places_utc.csv' CSV;"
